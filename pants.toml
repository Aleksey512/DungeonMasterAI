[GLOBAL]
pants_version = "2.22.1"
colors = true
backend_packages = [
  "pants.backend.docker",
  "pants.backend.docker.lint.hadolint",
  "pants.backend.python.lint.autoflake",
  "pants.backend.python",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.docformatter",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.lint.isort",
  "pants.backend.python.typecheck.mypy",
  "pants.backend.experimental.go",
  "pants.backend.shell",
  "pants.backend.shell.lint.shellcheck",
  "pants.backend.shell.lint.shfmt",
]


[source]
root_patterns = [
  "/services",
  "/libs/python",
]

[golang]
minimum_expected_version = "1.19"

[python]
interpreter_constraints = [">=3.12"]
enable_resolves = true

[python-bootstrap]
search_path = ["<PYENV>", "<PATH>", "<PYENV_LOCAL>"]

[python.resolves]
gateway = "services/gateway/gateway.lock"

[python-infer]
use_rust_parser = true

[python-repos]
find_links = ["file://%(buildroot)s/dist"]

[test]
output = "all"
report = true
report_dir = "test_reports"
use_coverage = true

[coverage-py]
global_report = true

[pytest]
args = ["-vv", "-s", "-W ignore::DeprecationWarning", "--no-header"]

[isort]
args = [
    "--profile=black",
    "-l=88",
]

[mypy]
args = [
    "--ignore-missing-imports",
    "--local-partial-types",
    "--pretty",
    "--color-output",
    "--error-summary",
    "--show-error-codes",
    "--show-error-context",
]

[docker]
env_vars = [
  "ACTIONS_CACHE_URL",
  "ACTIONS_RUNTIME_TOKEN",
  "DYNAMIC_TAG",
  "DOCKER_CONFIG=%(env.HOME)s/.docker",
  "HOME",
  "USER",
  "PATH"
]
tools = [
  "docker",
  "dirname",
  "readlink",
  "python3",
  "cut",
  "sed",
  "bash",
]

[hadolint]
config_discovery = true
